            <AddExpenses  onUpdateExpenses={handleDataAdd} />
                 <div className="" style={{display:'flex',justifyContent:'end', marginBottom:'5px'}}>
                    <style>
                      {`.ant-picker-header-view{
                          display:flex;
                      }
                        .ant-picker-dropdown .ant-picker-header {
                            /* Adjust these properties as needed */
                            width: 50% !important;         /* Ensures the header fits the dropdown width */
                            padding: 8px;        /* Adjust padding if needed */
                            display: flex;
                            {/* justify-content: center; /* Centers header content */ */}
                        }
                      `}
                    </style>
                    <DatePicker style={{ width: '10rem', height:'2.5rem', padding: '0 8px', textAlign: 'center' ,borderRadius:'1rem',color:'lightgrey'}} onChange={onChange}  className="customDropdown" picker="month" />
                  </div>
                  {totalExpenses ? (
                    <div style={{ width: '100%' }}>
                    <div style={{display:'flex',justifyContent:'space-between'}}>
                      <p style={{fontSize:'12px',color:'grey'}}>Total spent amount : {spent_amt}</p>
                      <p style={{color:'#127afb',cursor:'pointer' ,fontSize:'12px'}} onClick={showModal}>View expenses</p>
                    </div>
                    <div className={classes.chart_container}>
                        <LineChart
                          width={chartWidth}
                          height={300}
                          dataset={selectiveData}
                          series={[{ dataKey: "expense", label: "Expenses" }]}
                          xAxis={[{ scaleType: "point", dataKey: "name" }]}
                        />
                    </div>
                  </div>

                    ) : (
                      <div className={classes.empty_graph_handler}>No expenses to display</div>
                    )}

              <My_modal title={'Expenses ('+ year_month +')'}  isModalOpen={modal} handleCancel={handleCancel}>
                  <div className={classes.expense_list_container}>
                  {totalExpenses ? (
                      <List
                        itemLayout="horizontal"
                        dataSource={totalExpenses.allExpenses}
                        renderItem={(item, index) => {
                          const date = new Date(item.name);
                          const month = date.toLocaleString('default', { month: 'short' }).toUpperCase();
                          const day = date.getDate();

                          return (
                            <List.Item>
                              <List.Item.Meta
                                avatar={
                                  <div className={classes.list_avatar}>
                                    <h4>{month}</h4>
                                    <p>{day}</p>
                                  </div>
                                }
                                title={<h5>{item.description}</h5>}
                                description={<p>{item.expense}</p>}
                              />
                              <Update_expense itemId={item.id} date={day} initial_total_expenses={totalExpenses} initial_selective_data={selectiveData} initial_spent_amt={spent_amt}  onUpdateData={handleDataUpdate} />
                                {deletingItem === item.id ? (
                                  <Loader size={20} /> 
                                ) : (
                                  <img
                                    src="/Icons/delete.png"
                                    onClick={() => deleteExpense(item.id,day,item.expense)}
                                    alt="Delete"
                                    style={{ height: '1.4rem', cursor: 'pointer' }}
                                  />
                                )}                           
                              </List.Item>
                          );
                        }}
                      />
                    ) : (
                      <div className={classes.empty_list_handler}>No expenses to display</div>
                    )}
                  </div>
              </My_modal>